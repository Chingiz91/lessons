'==========List=========='
# списки - изменяемый, индексируемый, упорядоченный, итерируемый тип данных, предназначенный для хранения любых данных в определенном порядке

# list_1 = [1,2,14, 'hello', True, [0,0,0], None]
         #0 1  2     3       4       5     6     (индексы)

# list_1[3] # 'hello'
# list_1[-1] # none
# list_1[-2][-1] # 0
# list_1[3][-2]  # от слова hello достали букву "l"
# list_1[5] # [0,0,0]

'range (start, end (не включительно), step) - это функция генератор, которая генерирут \ создает диапозон от start до end (не включительно)'

#list('hello')  ->  ['h','e','l','l','o']

# list_2 = list (range (0, 101))   # список цифр от 0 до 100
# print (list_2)   
# print (list(range(50, 71)))  # список цифр от 50 до 70 

# print (list(range(11, 4, -1)))  #[0, 2, 4, 6, 8, 10] (перешагивает через одно значение)
#  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  шаг 1
#  # [0, 2, 4, 6, 8, 10]  шаг 2
#  # [0, 3, 6, 9]  шаг 3
#  # [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0] шаг -1


"==========Методы списков=========="
'append - добовление элементов в конец списка'

# list_ = []
# list_.append(1)
# list_.append('hello world')
# list_.append(True)
# print(list_) # [1, 'hello world', True]



"pop - удаление элемента из списка по индексу, так же возвращает удаленный элемент. Если не указать индекс, то удалит с конца"

# list_ = [90, True, None, 'hi']
# popped = list_.pop(1)
# print(list_) # [90, None, 'hi']
# print (popped) # True


'remove - удаление элемента из списка по значению'

# list_ = [1, 2, 3, 1, 'hi', 5, 99, 0, -11]
# list_.remove('hi')
# print(list_) # удалится слово 'hi'


'count - считает количество принятого элемента в списке'

# list_ = [1, 23, 1, 'hi', 4, 5, 6, 'hi', 1, 7, 1, 7, 8, 'Hi', 1]
# print(list_.count(1)) # количество числа "1" в данных - 7
# print(list_.count(7)) # количество числа "7" в данных - 1
# print(list_.count('hi')) # количество слова "hi" в данных - 2


'index - возращает индекс первого вхождения принятого элемента'

# list_ = ['hi', 1, 341, 2, 0, 'makers', 2, 1, 99, 10]
# print(list_.index('makers')) # выводит индекс элемента, в данном случае (5)


'extend - расширяет список при помощи другого списка'

# list_1 = [1, 2, 3]
# list_2 = [0, 0, 0]
# list_1.append(list_2) # [1, 2, 3 [0, 0, 0]]
# print(list_1)
# list_1.extend(list_2) # [1, 2, 3, 0, 0, 0]
# print(list_1)


'reverse - изменяет список, расставляя его элементы в обратном порядке (зеркалит)'

# list_1 = ['hi', 1, 2, 3, True, [1, 2, 3]]
# list_1.reverse()
# print(list_1) # [[1, 2, 3], True, 3, 2, 1, 'hi']



'sort - сортирует список, состоящий из элементов одного типа данных'

list_1 = [12, 4, 1, 0, 5, 7]
list_1.sort() # по порядку
list_1.sort(reverse=True) # в обратном порядке
print(list_1)

list_1 = ['c', 'b', 'd', 'A', 'D', 'B']
list_1.sort() # по порядку
print(list_1)

'clear - очищает список'

list_2 = [12, 42, 1, 'hi', 0, False, None]
list_2.clear()
print(list_2)





a, b, c = 10, 5, 2  # множественное присвоение
print(a)



list_ = [23, 'hi', 4, 0, 'makers']
for i in list_:
    print(i)



meshok = ['картошка', 'лук','лук', 'картошка', 'лук']

paket1 = []
paket2 = []

for ruka in meshok:
    if ruka == 'картошка':
     paket1.append(ruka)
    elif ruka == 'лук':
       paket2.append(ruka)
print(paket1)
print(paket2)


# .append - способ добавления


